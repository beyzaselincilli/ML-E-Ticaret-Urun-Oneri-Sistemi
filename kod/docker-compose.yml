version: '3'

services:
  api:
    build:
      context: .
      dockerfile: docker/api.Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - mlflow
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    networks:
      - recommendation-network

  airflow-webserver:
    build:
      context: .
      dockerfile: docker/airflow.Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./src/airflow/dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow.db
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - recommendation-network

  airflow-scheduler:
    build:
      context: .
      dockerfile: docker/airflow.Dockerfile
    volumes:
      - ./src/airflow/dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow.db
    command: scheduler
    networks:
      - recommendation-network

  mlflow:
    build:
      context: .
      dockerfile: docker/mlflow.Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
    environment:
      - BACKEND_STORE_URI=sqlite:////mlflow/mlflow.db
      - DEFAULT_ARTIFACT_ROOT=/mlruns
    networks:
      - recommendation-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - recommendation-network

networks:
  recommendation-network:
    driver: bridge 